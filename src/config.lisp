(defpackage :cl-gserver.config
  (:use :cl)
  (:nicknames :config)
  (:export #:config-from
           #:retrieve-section
           #:retrieve-keys))

(in-package :cl-gserver.config)

(defun config-from (config-string)
  "Parses the given config-string, represented by common lisp s-expressions.
The config is composed of plists in a hierarchy.

This function parses (run through `cl:read`) the given config string.
The config string can be generated by:

```
(let ((*print-case* :downcase))
  (prin1-to-string '(config 
                     (:foo 1
                      :bar 2))))
```
Or just be given by reading from a file.
Notice the 'config' s-expr must start with the root `car` 'config'.
"
  (when config-string
    (let* ((stream (make-string-input-stream config-string))
           (config (read stream)))
      (if (string= "config" (string-downcase (symbol-name (car config))))
          (cadr config)
          (error "Unrecognized config!")))))

(defun retrieve-section (config section)
  "Retrieves the given named section which should be a (global) `symbol` (a key).
A section usually is a plist with additional configs or sub sections.
This function looks only in the root hierarchy of the given config."
  (getf config section))

(defun retrieve-keys (config)
  "Retrieves all section keys"
  (loop :for key :in config :by #'cddr
        :collect key))
